name: x-test
summary: xtest for optee
description: |
 This is xtest with TAs unsigned
version: 3.x
type: app

base: core20

architectures:
  - build-on: [amd64, arm64]
    run-on: arm64

confinement: strict
grade: stable

environment:
    LD_LIBRARY_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
    PATH: ${SNAP}/bin:${PATH}

apps:
    xtest:
        command: bin/xtest
        plugs:
            - network-bind
            - tee
            - home
parts:
    optee-os:
        plugin: nil
        source-depth: 1
        override-build: |
            export ARCH="arm"
            export CROSS_COMPILE="${SNAPCRAFT_ARCH_TRIPLET}-"
            export CROSS_COMPILE_core="${SNAPCRAFT_ARCH_TRIPLET}-"
            export CROSS_COMPILE_ta_arm64="${SNAPCRAFT_ARCH_TRIPLET}-"
            export CFG_USER_TA_TARGETS="ta_arm64"
            export CFG_ARM64_core=y
            export DEBUG=0 \
            export CFG_TEE_CORE_LOG_LEVEL=1 \
            export CFG_TEE_TA_LOG_LEVEL=1 \
            export CFG_TEE_BENCHMARK=n
            export CFG_CORE_HEAP_SIZE=262144
            # set NXP platform
            export PLATFORM=imx
            export PLATFORM_FLAVOR=mx8mpevk
            export CFG_CORE_HUK_SUBKEY_COMPAT_USE_OTP_DIE_ID=n
            git clone -b ${VERSION} https://github.com/OP-TEE/optee_os.git
            mv optee_os/* .
            rm -fr optee_os
            make O=${SNAPCRAFT_PART_BUILD}/out -j$(nproc)
            cp -r ${SNAPCRAFT_PART_BUILD}/out/export-ta_arm* ${SNAPCRAFT_PART_INSTALL}/export-ta_arm
            ${SNAPCRAFT_ARCH_TRIPLET}-objcopy \
                 -O binary \
                 ${SNAPCRAFT_PART_BUILD}/out/core/tee.elf \
                 ${SNAPCRAFT_PART_INSTALL}/tee.bin

        prime:
            - -*

    optee-client:
        plugin: make
        source-depth: 1
        make-parameters:
            - ARCH="arm64"
            - LDFLAGS="-Wl,--strip-all"
            - DEBUG=0
            - CROSS_COMPILE="${SNAPCRAFT_ARCH_TRIPLET}-"
            - CFG_TEE_CLIENT_LOAD_PATH=""
            - CFG_TA_TEST_PATH=0
            - CFG_TEE_SUPP_LOG_LEVEL=0
            - SBINDIR=/usr/sbin
            - LIBDIR=/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
        build-packages:
            - pkg-config
            - uuid-dev
            - to arm64:
                - uuid-dev:arm64
        override-build: |
          # we need new python cryptography
          git clone -b ${VERSION} https://github.com/OP-TEE/optee_client.git
          mv optee_client/* .
          rm -fr optee_client
          snapcraftctl build

        stage:
            - usr/*
        prime:
            - usr/sbin
            - usr/lib/*/lib*so*

    optee-test:
       after:
         - optee-os
         - optee-client
       plugin: make
       make-parameters:
         - CROSS_COMPILE="${SNAPCRAFT_ARCH_TRIPLET}-"
         - TA_DEV_KIT_DIR="${SNAPCRAFT_STAGE}/export-ta_arm"
         - CFG_TEE_CLIENT_LOG_LEVEL="2"
         - OPTEE_CLIENT_EXPORT="${SNAPCRAFT_STAGE}/usr"
         - DESTDIR="${SNAPCRAFT_PART_INSTALL}"
         - WITH_OPENSSL="y"
         - CFG_PKCS11_TA="y"
         - BINDIR="/usr/bin"
         - LIBDIR="/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}"
         - SBINDIR="/usr/sbin"
         - ARCH="${SNAPCRAFT_TARGET_ARCH}"
         - CFG_USER_TA_TARGETS="ta_arm64"
         - CROSS_COMPILE_ta_arm64="${SNAPCRAFT_ARCH_TRIPLET}-"
         - O="${SNAPCRAFT_PART_BUILD}/out"
       override-build: |
         # we need new python cryptography
         git clone -b ${VERSION} https://github.com/OP-TEE/optee_test.git
         mv optee_test/* .
         rm -fr optee_test
         pip3 install -U cryptography>=35.0.0
         snapcraftctl build
         cp ${SNAPCRAFT_STAGE}/export-ta_arm/scripts/sign_encrypt.py ${SNAPCRAFT_PART_INSTALL}/bin
 
build-packages:
    - bison
    - build-essential
    - device-tree-compiler
    - flex
    - gcc-aarch64-linux-gnu
    - libxml2-dev
    - libssl-dev
    - python3
    - python3-crypto
    - python3-pyelftools
    - python3-pycryptodome
    - wget
    - pkg-config
    - uuid-dev
    - zlib1g-dev
    - to arm64:
        - uuid-dev:arm64
